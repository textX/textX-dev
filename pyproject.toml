[project]
name = "textX-dev"
description = "Development tools for textX"
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Igor R. Dejanović", email = "igor.dejanovic@gmail.com"},
]
maintainers = [
    {name = "Igor R. Dejanović", email = "igor.dejanovic@gmail.com"},
]
keywords = ["textX", "parser", "meta-language", "meta-model", "language", "DSL"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Interpreters",
    "Topic :: Software Development :: Compilers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "textX",
    "textX-jinja",
    "textx-lang-questionnaire",
    "click",
    "appdirs",
    "jinja2",
]

[project.urls]
Homepage = "https://github.com/textX/textX-dev"
Repository = "https://github.com/textX/textX-dev"

[project.optional-dependencies]
dev = [
    "wheel",
    "ruff",

    "pexpect",
    "coverage==7.5.3",
    "pytest==8.2.2",
    "pytest-cov==5.0.0"
]
test = [
    "pexpect",
    "coverage==7.5.3",
    "pytest==8.2.2",
    "pytest-cov==5.0.0"
]

[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.8.0,<4"]

[tool.flit.module]
name = "textxdev"

[project.entry-points.textx_commands]
startproject = "textxdev.cli.startproject:startproject"

[project.entry-points.textx_generators]
que_txproject = "textxdev.scaffold:que_gen_txproject"

[tool.ruff]
line-length = 90
indent-width = 4

[tool.ruff.lint]
# https://docs.astral.sh/ruff/linter/#rule-selection
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
